// Generated by view binder compiler. Do not edit!
package com.example.project_mobile.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.project_mobile.R;
import com.google.android.material.imageview.ShapeableImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ClinicCardItemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ShapeableImageView clinicImage;

  @NonNull
  public final Guideline guideline10;

  @NonNull
  public final Guideline guideline8;

  @NonNull
  public final Guideline guideline9;

  @NonNull
  public final ImageButton heartBtn;

  @NonNull
  public final TextView txtClinicLocation;

  @NonNull
  public final TextView txtClinicName;

  private ClinicCardItemBinding(@NonNull ConstraintLayout rootView,
      @NonNull ShapeableImageView clinicImage, @NonNull Guideline guideline10,
      @NonNull Guideline guideline8, @NonNull Guideline guideline9, @NonNull ImageButton heartBtn,
      @NonNull TextView txtClinicLocation, @NonNull TextView txtClinicName) {
    this.rootView = rootView;
    this.clinicImage = clinicImage;
    this.guideline10 = guideline10;
    this.guideline8 = guideline8;
    this.guideline9 = guideline9;
    this.heartBtn = heartBtn;
    this.txtClinicLocation = txtClinicLocation;
    this.txtClinicName = txtClinicName;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ClinicCardItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ClinicCardItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.clinic_card_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ClinicCardItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.clinicImage;
      ShapeableImageView clinicImage = ViewBindings.findChildViewById(rootView, id);
      if (clinicImage == null) {
        break missingId;
      }

      id = R.id.guideline10;
      Guideline guideline10 = ViewBindings.findChildViewById(rootView, id);
      if (guideline10 == null) {
        break missingId;
      }

      id = R.id.guideline8;
      Guideline guideline8 = ViewBindings.findChildViewById(rootView, id);
      if (guideline8 == null) {
        break missingId;
      }

      id = R.id.guideline9;
      Guideline guideline9 = ViewBindings.findChildViewById(rootView, id);
      if (guideline9 == null) {
        break missingId;
      }

      id = R.id.heartBtn;
      ImageButton heartBtn = ViewBindings.findChildViewById(rootView, id);
      if (heartBtn == null) {
        break missingId;
      }

      id = R.id.txtClinicLocation;
      TextView txtClinicLocation = ViewBindings.findChildViewById(rootView, id);
      if (txtClinicLocation == null) {
        break missingId;
      }

      id = R.id.txtClinicName;
      TextView txtClinicName = ViewBindings.findChildViewById(rootView, id);
      if (txtClinicName == null) {
        break missingId;
      }

      return new ClinicCardItemBinding((ConstraintLayout) rootView, clinicImage, guideline10,
          guideline8, guideline9, heartBtn, txtClinicLocation, txtClinicName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

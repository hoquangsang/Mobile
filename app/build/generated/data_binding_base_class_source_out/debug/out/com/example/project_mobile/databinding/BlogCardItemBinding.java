// Generated by view binder compiler. Do not edit!
package com.example.project_mobile.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.project_mobile.R;
import com.google.android.material.imageview.ShapeableImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class BlogCardItemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ShapeableImageView blogAuthorImage;

  @NonNull
  public final ShapeableImageView blogImage;

  @NonNull
  public final ImageButton btnFavourite;

  @NonNull
  public final Guideline guideline12;

  @NonNull
  public final Guideline guideline13;

  @NonNull
  public final TextView txtBlogAuthorName;

  @NonNull
  public final TextView txtBlogRating;

  @NonNull
  public final TextView txtBlogTime;

  @NonNull
  public final TextView txtBlogTitle;

  private BlogCardItemBinding(@NonNull ConstraintLayout rootView,
      @NonNull ShapeableImageView blogAuthorImage, @NonNull ShapeableImageView blogImage,
      @NonNull ImageButton btnFavourite, @NonNull Guideline guideline12,
      @NonNull Guideline guideline13, @NonNull TextView txtBlogAuthorName,
      @NonNull TextView txtBlogRating, @NonNull TextView txtBlogTime,
      @NonNull TextView txtBlogTitle) {
    this.rootView = rootView;
    this.blogAuthorImage = blogAuthorImage;
    this.blogImage = blogImage;
    this.btnFavourite = btnFavourite;
    this.guideline12 = guideline12;
    this.guideline13 = guideline13;
    this.txtBlogAuthorName = txtBlogAuthorName;
    this.txtBlogRating = txtBlogRating;
    this.txtBlogTime = txtBlogTime;
    this.txtBlogTitle = txtBlogTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static BlogCardItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static BlogCardItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.blog_card_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static BlogCardItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.blogAuthorImage;
      ShapeableImageView blogAuthorImage = ViewBindings.findChildViewById(rootView, id);
      if (blogAuthorImage == null) {
        break missingId;
      }

      id = R.id.blogImage;
      ShapeableImageView blogImage = ViewBindings.findChildViewById(rootView, id);
      if (blogImage == null) {
        break missingId;
      }

      id = R.id.btnFavourite;
      ImageButton btnFavourite = ViewBindings.findChildViewById(rootView, id);
      if (btnFavourite == null) {
        break missingId;
      }

      id = R.id.guideline12;
      Guideline guideline12 = ViewBindings.findChildViewById(rootView, id);
      if (guideline12 == null) {
        break missingId;
      }

      id = R.id.guideline13;
      Guideline guideline13 = ViewBindings.findChildViewById(rootView, id);
      if (guideline13 == null) {
        break missingId;
      }

      id = R.id.txtBlogAuthorName;
      TextView txtBlogAuthorName = ViewBindings.findChildViewById(rootView, id);
      if (txtBlogAuthorName == null) {
        break missingId;
      }

      id = R.id.txtBlogRating;
      TextView txtBlogRating = ViewBindings.findChildViewById(rootView, id);
      if (txtBlogRating == null) {
        break missingId;
      }

      id = R.id.txtBlogTime;
      TextView txtBlogTime = ViewBindings.findChildViewById(rootView, id);
      if (txtBlogTime == null) {
        break missingId;
      }

      id = R.id.txtBlogTitle;
      TextView txtBlogTitle = ViewBindings.findChildViewById(rootView, id);
      if (txtBlogTitle == null) {
        break missingId;
      }

      return new BlogCardItemBinding((ConstraintLayout) rootView, blogAuthorImage, blogImage,
          btnFavourite, guideline12, guideline13, txtBlogAuthorName, txtBlogRating, txtBlogTime,
          txtBlogTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
